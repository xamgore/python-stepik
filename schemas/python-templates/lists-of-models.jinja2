

class ListOf{{ name }}:
    def __init__(self, stepik):
        from stepik import Stepik
        self._stepik: Stepik = stepik
{% if GET_PK %}


    def get(self, {{ pk }}: {{ pk_type }}) -> {{ model_id }}:
{% if model_id == 'dict' %}
        return self._stepik._fetch_object({'_resources_name': '{{ resources_name }}'}, {{ pk }})
{% else %}
        return {{ model_id }}(self._stepik, self._stepik._fetch_object({{ model_id }}, {{ pk }}))
{% endif %}
{% endif %}
{% if GET_BASE %}


    def get_all(self, {{ pk }}s: List[{{ pk_type }}], keep_order=False) -> Iterable[{{ model_id }}]:
{% if model_id == 'dict' %}
        return self._stepik._fetch_objects({{ model_id }}, {{ pk }}s)
{% else %}
        objects = self._stepik._fetch_objects({{ model_id }}, {{ pk }}s)
        iterable = ({{ model_id }}(self._stepik, o) for o in objects)

        if keep_order:
            iterable = sorted(iterable, key=lambda o: ids.index(getattr(o, '{{ pk }}')))  # or []?

        return iterable
{% endif %}


    def __iter__(self):
        yield from self.iterate(limit=None)
{% endif %}
{% if POST_BASE %}


    def create(self{#
        #}{% for p in POST_BASE_PARAMS %}, {{ p.name }}: {{ p.python_type }}{#
        #}{% endfor %}{#
        #}{% for p in POST_BASE_OTHER_PARAMS %}, {{ p.name }}: {{ p.python_type }} = None{#
        #}{% endfor %}) -> {{ model_id }}:
        vars = locals().copy()
        data = {'{{ resource_name }}': {k: v for k, v in vars.items() if k != 'self' and v is not None}}

        resources_name = '{{ resources_name }}'
        response = self._stepik._post(resources_name, data)

        if resources_name not in response:
            raise StepikError(response)

{% if model_id == 'dict' %}
        return response[resources_name][0]
{% else %}
        return {{ model_id }}(self._stepik, response[resources_name][0])
{% endif %}
{% endif %}
{% if DELETE_PK %}


    def delete(self, {{ pk }}: {{ pk_type }}) -> dict:
        return self._stepik._delete('{{ resources_name }}', {{ pk }})
{% endif %}
{# TODO: PUT #}
{# TODO: create course!1 #}
{# TODO: presentation #}
{##}
